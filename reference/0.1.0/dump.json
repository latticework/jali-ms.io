[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import * as Iterables from './iterables';\nimport * as TypeGuards from './type-guards';\nexport { default as MessagePriority } from './src/message-priority';\nexport { default as MessageSeverity } from './src/message-severity';\nexport { default as StructuredError } from './src/structured-error';\nexport { Iterables, TypeGuards };\n"
  },
  {
    "__docId__": 1,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/iterables/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/iterables/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from '../src/notification-message-iterables';\n"
  },
  {
    "__docId__": 2,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/src/message-priority.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/src/message-priority.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * Represents the priority of notification messages.\n */\nvar MessagePriority;\n(function (MessagePriority) {\n    /** Specifies that a message must be communicated. */\n    MessagePriority[MessagePriority[\"Mandatory\"] = 0] = \"Mandatory\";\n    /** Specifies high priority messages such as errors. */\n    MessagePriority[MessagePriority[\"High\"] = 1] = \"High\";\n    /** Specifies normal priority messages such as warnings. */\n    MessagePriority[MessagePriority[\"Normal\"] = 2] = \"Normal\";\n    /** Specifies low priority messages such as information messages. */\n    MessagePriority[MessagePriority[\"Low\"] = 3] = \"Low\";\n    /** Specifies very low priority messages such as debug messages. */\n    MessagePriority[MessagePriority[\"VeryLow\"] = 4] = \"VeryLow\";\n    /** Specifies messages which should not be communicated, such as trace messages. */\n    MessagePriority[MessagePriority[\"Restricted\"] = 5] = \"Restricted\";\n})(MessagePriority || (MessagePriority = {}));\nexport default MessagePriority;\n"
  },
  {
    "__docId__": 3,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/src/message-severity.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/src/message-severity.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "// tslint:disable:max-line-length\n/**\n * Represents the severity of a notification message.\n * @see [Microsoft.Extensions.Logging.LogLevel]{@link https://github.com/aspnet/Logging/blob/dev/src/Microsoft.Extensions.Logging.Abstractions/LogLevel.cs}\n */\nvar MessageSeverity;\n(function (MessageSeverity) {\n    // tslint:enable:max-line-length\n    /**\n     * Logs that describe an unrecoverable application or system crash, or a catastrophic failure\n     * that requires immediate attention.\n     */\n    MessageSeverity[MessageSeverity[\"Critical\"] = 0] = \"Critical\";\n    /**\n     * Logs that highlight when the current flow of execution is stopped due to a failure. These\n     * should indicate a failure in the current activity, not an application-wide failure.\n     */\n    MessageSeverity[MessageSeverity[\"Error\"] = 1] = \"Error\";\n    /**\n     * Logs that highlight an abnormal or unexpected event in the application flow, but do not\n     * otherwise cause the application execution to stop.\n     */\n    MessageSeverity[MessageSeverity[\"Warning\"] = 2] = \"Warning\";\n    /**\n     * Logs that track the general flow of the application. These logs should have long-term value.\n     */\n    MessageSeverity[MessageSeverity[\"Information\"] = 3] = \"Information\";\n    /**\n     * Logs that are used for interactive investigation during development.  These logs should\n     * primarily contain information useful for debugging and have no long-term value.\n     */\n    MessageSeverity[MessageSeverity[\"Debug\"] = 4] = \"Debug\";\n    /**\n     * Logs that contain the most detailed messages. These messages may contain sensitive\n     * application data. These messages are disabled by default and should never be enabled in a\n     * production environment.\n     */\n    MessageSeverity[MessageSeverity[\"Trace\"] = 5] = \"Trace\";\n})(MessageSeverity || (MessageSeverity = {}));\nexport default MessageSeverity;\n"
  },
  {
    "__docId__": 4,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/src/notification-message-iterables.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/src/notification-message-iterables.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Errors, Iterables } from '@jali-ms/util';\nimport MessageSeverity from './message-severity';\nexport function error(messages) {\n    Errors.verifyIterable('messages', messages);\n    return Iterables.find(get_Errors(messages));\n}\nexport function get_Errors(messages) {\n    Errors.verifyIterable('messages', messages);\n    return Iterables.filter(messages, message => message.severity <= MessageSeverity.Error);\n}\n"
  },
  {
    "__docId__": 5,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "error",
    "memberof": "all/@jali-ms/core/src/notification-message-iterables.js",
    "longname": "all/@jali-ms/core/src/notification-message-iterables.js~error",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/core/src/notification-message-iterables.js",
    "importStyle": "{error}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "messages",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "get_Errors",
    "memberof": "all/@jali-ms/core/src/notification-message-iterables.js",
    "longname": "all/@jali-ms/core/src/notification-message-iterables.js~get_Errors",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/core/src/notification-message-iterables.js",
    "importStyle": "{get_Errors}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "messages",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/src/notification-message.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/src/notification-message.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 8,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/src/structured-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/src/structured-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { TypeGuards as UtilTypeGuards } from '@jali-ms/util';\nimport * as TypeGuards from '../type-guards';\nimport * as Iterables from '../iterables';\nexport default class StructuredError extends Error {\n    /**\n     * @todo ensure meaningful {@link NotificationMessage}.\n     */\n    constructor(messageOrMessagesOrError = undefined, innerError = undefined) {\n        super(Class.resolveMessage(messageOrMessagesOrError)); // Also validates.\n        this.innerError = innerError;\n        if (UtilTypeGuards.isError(messageOrMessagesOrError)) {\n            this.innerError = messageOrMessagesOrError;\n        }\n    }\n    /**\n     * Verifies the first constructor parameter and Resolves an error message from it for the\n     * {@link Error} constructor.\n     */\n    static resolveMessage(messageOrMessagesOrError = undefined) {\n        if (TypeGuards.isNotificationMessage(messageOrMessagesOrError)) {\n            return messageOrMessagesOrError.message;\n        }\n        else if (UtilTypeGuards.makeIsIterable(TypeGuards.isNotificationMessage)(messageOrMessagesOrError)) {\n            let error = Iterables.error(messageOrMessagesOrError);\n            if (error !== undefined) {\n                return error.message;\n            }\n        }\n        return undefined;\n    }\n}\nconst Class = StructuredError; // tslint:disable-line:variable-name\n"
  },
  {
    "__docId__": 9,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StructuredError",
    "memberof": "all/@jali-ms/core/src/structured-error.js",
    "longname": "all/@jali-ms/core/src/structured-error.js~StructuredError",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/core/src/structured-error.js",
    "importStyle": "StructuredError",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 10,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/core/src/structured-error.js~StructuredError",
    "longname": "all/@jali-ms/core/src/structured-error.js~StructuredError#constructor",
    "access": null,
    "description": "",
    "lineNumber": 8,
    "todo": [
      "ensure meaningful {@link NotificationMessage}."
    ],
    "params": [
      {
        "name": "messageOrMessagesOrError",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      },
      {
        "name": "innerError",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "innerError",
    "memberof": "all/@jali-ms/core/src/structured-error.js~StructuredError",
    "longname": "all/@jali-ms/core/src/structured-error.js~StructuredError#innerError",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "innerError",
    "memberof": "all/@jali-ms/core/src/structured-error.js~StructuredError",
    "longname": "all/@jali-ms/core/src/structured-error.js~StructuredError#innerError",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "resolveMessage",
    "memberof": "all/@jali-ms/core/src/structured-error.js~StructuredError",
    "longname": "all/@jali-ms/core/src/structured-error.js~StructuredError.resolveMessage",
    "access": null,
    "description": "Verifies the first constructor parameter and Resolves an error message from it for the\n{@link Error} constructor.",
    "lineNumber": 19,
    "params": [
      {
        "name": "messageOrMessagesOrError",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Class",
    "memberof": "all/@jali-ms/core/src/structured-error.js",
    "longname": "all/@jali-ms/core/src/structured-error.js~Class",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/core/src/structured-error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/src/type-guards.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/src/type-guards.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export function isNotificationMessage(arg) {\n    const message = arg;\n    return message.messageCode !== undefined\n        && message.priority !== undefined\n        && message.severity !== undefined\n        && message.message !== undefined;\n}\n"
  },
  {
    "__docId__": 16,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isNotificationMessage",
    "memberof": "all/@jali-ms/core/src/type-guards.js",
    "longname": "all/@jali-ms/core/src/type-guards.js~isNotificationMessage",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/core/src/type-guards.js",
    "importStyle": "{isNotificationMessage}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "arg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/core/type-guards/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/core/type-guards/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from '../src/type-guards';\n"
  },
  {
    "__docId__": 18,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export { default as MessageCode } from './src/message-code';\nexport { default as StandardMessageEncoding } from './src/standard-message-encoding';\nexport { default as StandardMessageEncodingVersion } from './src/standard-message-encoding-version';\nexport { default as TypedMessage } from './src/typed-message';\n"
  },
  {
    "__docId__": 19,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/message-code.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/message-code.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Errors } from '@jali-ms/util';\nimport * as StandardEncodings from './standard-encodings';\nexport default class MessageCode {\n    constructor(messageCode, messageEncoding) {\n        this.messageCode = messageCode;\n        Errors.verifyString('messageCode', messageCode);\n        if (messageEncoding) {\n            Errors.verifyObject('messageEncoding', messageEncoding);\n        }\n        this.messageEncoding = messageEncoding || StandardEncodings.standard;\n        // if (!messageEncoding.isValidCode(messageCode)) {\n        // }\n    }\n    get priority() {\n        return this.messageEncoding.getMessagePriority(this.messageCode);\n    }\n}\n"
  },
  {
    "__docId__": 20,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MessageCode",
    "memberof": "all/@jali-ms/note/src/message-code.js",
    "longname": "all/@jali-ms/note/src/message-code.js~MessageCode",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/note/src/message-code.js",
    "importStyle": "MessageCode",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 21,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/note/src/message-code.js~MessageCode",
    "longname": "all/@jali-ms/note/src/message-code.js~MessageCode#constructor",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      },
      {
        "name": "messageEncoding",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "messageCode",
    "memberof": "all/@jali-ms/note/src/message-code.js~MessageCode",
    "longname": "all/@jali-ms/note/src/message-code.js~MessageCode#messageCode",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "messageEncoding",
    "memberof": "all/@jali-ms/note/src/message-code.js~MessageCode",
    "longname": "all/@jali-ms/note/src/message-code.js~MessageCode#messageEncoding",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "priority",
    "memberof": "all/@jali-ms/note/src/message-code.js~MessageCode",
    "longname": "all/@jali-ms/note/src/message-code.js~MessageCode#priority",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/message-encoding-data.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/message-encoding-data.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 26,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/message-encoding-segment-data.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/message-encoding-segment-data.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 27,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/message-encoding-version.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/message-encoding-version.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 28,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/message-encoding.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/message-encoding.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 29,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/standard-encodings.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/standard-encodings.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import StandardMessageEncoding from './standard-message-encoding';\nexport const local = new StandardMessageEncoding([]);\nexport const standard = new StandardMessageEncoding([]);\nexport const extended = new StandardMessageEncoding([]);\n"
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "local",
    "memberof": "all/@jali-ms/note/src/standard-encodings.js",
    "longname": "all/@jali-ms/note/src/standard-encodings.js~local",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/note/src/standard-encodings.js",
    "importStyle": "{local}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "standard",
    "memberof": "all/@jali-ms/note/src/standard-encodings.js",
    "longname": "all/@jali-ms/note/src/standard-encodings.js~standard",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/note/src/standard-encodings.js",
    "importStyle": "{standard}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "extended",
    "memberof": "all/@jali-ms/note/src/standard-encodings.js",
    "longname": "all/@jali-ms/note/src/standard-encodings.js~extended",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/note/src/standard-encodings.js",
    "importStyle": "{extended}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/standard-message-encoding.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Errors, Iterables } from '@jali-ms/util';\n// import MessageEncodingData from './message-encoding-data';\nexport default class StandardMessageEncoding {\n    constructor(versions) {\n        this.versions = versions;\n        Errors.verifyIterable('versions', versions);\n        this.versionMap = createEncodingVersionMap(versions);\n    }\n    //    public static standardEncodings: MessageEncoding[] = [\n    //        new StandardMessageEncoding(createEncodingVersionMap())\n    //    ];\n    /**\n     * @todo implement\n     */\n    isValidCode(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        throw new Error('Not Implemented.');\n    }\n    getAuthorityCode(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        const version = this.getValidVersion(messageCode);\n        return version.getAuthorityCode(messageCode);\n    }\n    getDomainCode(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        const version = this.getValidVersion(messageCode);\n        return version.getDomainCode(messageCode);\n    }\n    getLibraryCode(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        const version = this.getValidVersion(messageCode);\n        return version.getLibraryCode(messageCode);\n    }\n    getMessagePriority(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        const version = this.getValidVersion(messageCode);\n        return version.getMessagePriority(messageCode);\n    }\n    getMessageSeverity(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        const version = this.getValidVersion(messageCode);\n        return version.getMessageSeverity(messageCode);\n    }\n    getBaseMessageCode(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        const version = this.getValidVersion(messageCode);\n        return version.getBaseMessageCode(messageCode);\n    }\n    /**\n     * @todo implement\n     */\n    getValidVersion(messageCode) {\n        Errors.verifyNotWhitespace('messageCode', messageCode);\n        throw new Error('Not Implemented.');\n    }\n}\nfunction createEncodingVersionMap(encodingVersions) {\n    return Iterables.toMap(encodingVersions, v => v.version);\n}\n"
  },
  {
    "__docId__": 34,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StandardMessageEncoding",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/note/src/standard-message-encoding.js",
    "importStyle": "StandardMessageEncoding",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 35,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#constructor",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "versions",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "versions",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#versions",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "versionMap",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#versionMap",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isValidCode",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#isValidCode",
    "access": null,
    "description": "",
    "lineNumber": 15,
    "todo": [
      "implement"
    ],
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAuthorityCode",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getAuthorityCode",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDomainCode",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getDomainCode",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getLibraryCode",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getLibraryCode",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getMessagePriority",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getMessagePriority",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getMessageSeverity",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getMessageSeverity",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getBaseMessageCode",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getBaseMessageCode",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getValidVersion",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~StandardMessageEncoding#getValidVersion",
    "access": null,
    "description": "",
    "lineNumber": 52,
    "todo": [
      "implement"
    ],
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createEncodingVersionMap",
    "memberof": "all/@jali-ms/note/src/standard-message-encoding.js",
    "longname": "all/@jali-ms/note/src/standard-message-encoding.js~createEncodingVersionMap",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/note/src/standard-message-encoding.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "encodingVersions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/note/src/typed-message.js",
    "memberof": null,
    "longname": "all/@jali-ms/note/src/typed-message.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MessageCode from './message-code';\nexport default class TypedMessage {\n    constructor(messageCode) {\n        this.innerMessageCode = new MessageCode(messageCode);\n    }\n    get messageCode() {\n        return this.innerMessageCode.messageCode;\n    }\n    get priority() {\n        return this.innerMessageCode.priority;\n    }\n}\n"
  },
  {
    "__docId__": 48,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TypedMessage",
    "memberof": "all/@jali-ms/note/src/typed-message.js",
    "longname": "all/@jali-ms/note/src/typed-message.js~TypedMessage",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/note/src/typed-message.js",
    "importStyle": "TypedMessage",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 49,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/note/src/typed-message.js~TypedMessage",
    "longname": "all/@jali-ms/note/src/typed-message.js~TypedMessage#constructor",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "messageCode",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "innerMessageCode",
    "memberof": "all/@jali-ms/note/src/typed-message.js~TypedMessage",
    "longname": "all/@jali-ms/note/src/typed-message.js~TypedMessage#innerMessageCode",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "messageCode",
    "memberof": "all/@jali-ms/note/src/typed-message.js~TypedMessage",
    "longname": "all/@jali-ms/note/src/typed-message.js~TypedMessage#messageCode",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "priority",
    "memberof": "all/@jali-ms/note/src/typed-message.js~TypedMessage",
    "longname": "all/@jali-ms/note/src/typed-message.js~TypedMessage#priority",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/errors/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/errors/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export { default as ArgumentEmptyStringError } from '../src/argument-empty-string-error';\nexport { default as ArgumentError } from '../src/argument-error';\nexport { default as ArgumentFalseError } from '../src/argument-false-error';\nexport { default as ArgumentFalsyError } from '../src/argument-falsy-error';\nexport { default as ArgumentNanError } from '../src/argument-nan-error';\nexport { default as ArgumentNullError } from '../src/argument-null-error';\nexport { default as ArgumentTypeError } from '../src/argument-type-error';\nexport { default as ArgumentUndefinedError } from '../src/argument-undefined-error';\nexport { default as ArgumentZeroError } from '../src/argument-zero-error';\nexport { default as InvalidStateError } from '../src/invalid-state-error';\nexport * from '../src/argument-verifiers';\n"
  },
  {
    "__docId__": 54,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import * as Errors from './errors';\nimport * as Iterables from './iterables';\nimport * as TypeGuards from './type-guards';\nexport { Errors, Iterables, TypeGuards };\n"
  },
  {
    "__docId__": 55,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/iterables/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/iterables/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from '../src/iterables';\n"
  },
  {
    "__docId__": 56,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-empty-string-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-empty-string-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentFalsyError } from './argument-falsy-error';\n/**\n * Represents that an argument erroneously has an empty string value.\n *\n * Throw this {@link Error} if a parameter must be a non-empty string.\n *\n * @example <caption>The argument for the parameter lastName is an empty string.</caption>\n * throw new ArgumentEmptyStringError('lastName');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link ArgumentWhitespaceStringError}\n * @see {@link verifyNonEmpty}\n * @see {@link verifyTruthy}\n * @see {@link verifyNotWhitespace}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentEmptyStringError extends ArgumentFalsyError {\n    /**\n     * Initializes a new instance of the {@link ArgumentEmptyStringError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must not be an\n     *    empty string. Yours is empty*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, message || 'Argument must not be an empty string. Yours is empty');\n    }\n}\n"
  },
  {
    "__docId__": 57,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentEmptyStringError",
    "memberof": "all/@jali-ms/util/src/argument-empty-string-error.js",
    "longname": "all/@jali-ms/util/src/argument-empty-string-error.js~ArgumentEmptyStringError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-empty-string-error.js",
    "importStyle": "ArgumentEmptyStringError",
    "description": "Represents that an argument erroneously has an empty string value.\n\nThrow this {@link Error} if a parameter must be a non-empty string.",
    "examples": [
      "<caption>The argument for the parameter lastName is an empty string.</caption>\nthrow new ArgumentEmptyStringError('lastName');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link ArgumentWhitespaceStringError}",
      "{@link verifyNonEmpty}",
      "{@link verifyTruthy}",
      "{@link verifyNotWhitespace}"
    ],
    "lineNumber": 21,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError"
    ]
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-empty-string-error.js~ArgumentEmptyStringError",
    "longname": "all/@jali-ms/util/src/argument-empty-string-error.js~ArgumentEmptyStringError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentEmptyStringError} class.",
    "lineNumber": 33,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must not be an\n   empty string. Yours is empty*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-error.js",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "content": "/**\n * Represents that an argument has violated a requirement.\n *\n * Throw this {@link Error} if a parameter has violated a requirement that can't be represented by\n * a more specific argument error.\n *\n * > **Note:** {@link ArgumentError} is the base class for all the Jali argument errors.\n *\n * > **Note:** The default message in all Jali argument error classes begin with\n * > **Error in argument** if `name` is not specified; otherwise **Error in argument '**\n * > *argument-name* **'** is used. If `message` is specified,  a colon is prefixed. All Jali\n * > subclasses specify a message.\n *\n * @example <caption>The argument for the parameter pairs has an odd number of elements.</caption>\n * throw new ArgumentError('pairs', `Argument must have an even number of elements. Yours has ` +\n *   `'${pairs.length}'`);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link ArgumentFalsyError}\n * @see {@link verifyArgument}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentError extends Error {\n    /**\n     * Initializes a new instance of the {@link ArgumentError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    An optional message. Default is no message. See class documentation for more details.*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(Class.makeMessage(name, message));\n    }\n    /** @private */\n    static makeMessage(name, message) {\n        return `Error in argument${name ? ` '${name}'` : ''}${(message) ? `: ${message}` : ''}`;\n    }\n}\nconst Class = ArgumentError; // tslint:disable-line:variable-name no-use-before-declare\n"
  },
  {
    "__docId__": 60,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentError",
    "memberof": "all/@jali-ms/util/src/argument-error.js",
    "longname": "all/@jali-ms/util/src/argument-error.js~ArgumentError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-error.js",
    "importStyle": "ArgumentError",
    "description": "Represents that an argument has violated a requirement.\n\nThrow this {@link Error} if a parameter has violated a requirement that can't be represented by\na more specific argument error.\n\n> **Note:** {@link ArgumentError} is the base class for all the Jali argument errors.\n\n> **Note:** The default message in all Jali argument error classes begin with\n> **Error in argument** if `name` is not specified; otherwise **Error in argument '**\n> *argument-name* **'** is used. If `message` is specified,  a colon is prefixed. All Jali\n> subclasses specify a message.",
    "examples": [
      "<caption>The argument for the parameter pairs has an odd number of elements.</caption>\nthrow new ArgumentError('pairs', `Argument must have an even number of elements. Yours has ` +\n  `'${pairs.length}'`);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link ArgumentFalsyError}",
      "{@link verifyArgument}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 28,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-error.js~ArgumentError",
    "longname": "all/@jali-ms/util/src/argument-error.js~ArgumentError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentError} class.",
    "lineNumber": 39,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "An optional message. Default is no message. See class documentation for more details.*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "makeMessage",
    "memberof": "all/@jali-ms/util/src/argument-error.js~ArgumentError",
    "longname": "all/@jali-ms/util/src/argument-error.js~ArgumentError.makeMessage",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Class",
    "memberof": "all/@jali-ms/util/src/argument-error.js",
    "longname": "all/@jali-ms/util/src/argument-error.js~Class",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-false-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-false-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentFalsyError } from './argument-falsy-error';\n/**\n * Represents that an argument erroneously has a value of `false`.\n *\n * Throw this {@link Error} if a parameter must be `true`.\n *\n * @example <caption>The argument for the parameter isValid is `false`.</caption>\n * throw new ArgumentFalseError('lastName');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link verifyTrue}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentFalseError extends ArgumentFalsyError {\n    /**\n     * Initializes a new instance of the {@link ArgumentFalseError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must have a\n     *    truthy value. Yours is 'false'*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, ArgumentFalsyError.makeFalsyTypedMessage(message, 'false'));\n    }\n}\n"
  },
  {
    "__docId__": 65,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentFalseError",
    "memberof": "all/@jali-ms/util/src/argument-false-error.js",
    "longname": "all/@jali-ms/util/src/argument-false-error.js~ArgumentFalseError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-false-error.js",
    "importStyle": "ArgumentFalseError",
    "description": "Represents that an argument erroneously has a value of `false`.\n\nThrow this {@link Error} if a parameter must be `true`.",
    "examples": [
      "<caption>The argument for the parameter isValid is `false`.</caption>\nthrow new ArgumentFalseError('lastName');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link verifyTrue}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 19,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError"
    ]
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-false-error.js~ArgumentFalseError",
    "longname": "all/@jali-ms/util/src/argument-false-error.js~ArgumentFalseError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentFalseError} class.",
    "lineNumber": 31,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must have a\n   truthy value. Yours is 'false'*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-falsy-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-falsy-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentError } from './argument-error';\n/**\n * Represents that an argument erroneously has a _falsy_ value.\n *\n * Throw this {@link Error} if a parameter must be _truthy_ and can't be represented by a more\n * specific argument error.\n *\n * @example <caption>The argument for the parameter item is falsy.</caption>\n * throw new ArgumentFalsyError('item');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\" target=\"_blank\">\n *    Definition of falsy</a> (MDN)\n * @see {@link verifyDefined}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentFalsyError extends ArgumentError {\n    /**\n     * Initializes a new instance of the {@link ArgumentFalsyError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must have a\n     *    truthy value. Yours does not*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, Class.makeFalsyTypedMessage(message));\n    }\n    /**\n     * Builds a default error message for subclasses.\n     * @param {string}: [message] -\n     *    Specified message. Otherwise, a generic message will be created like *Argument must have a\n     *    truthy value. Yours ${type ? `is '${type}'` : 'does not'*.\n     * @param {string}: [type] -\n     *    value to display in the message. Default is to display no value.\n     * @protected\n     * @since 0.0.1\n     */\n    static makeFalsyTypedMessage(message, type) {\n        return message ||\n            `Argument must have a truthy value. Yours ${type ? `is '${type}'` : 'does not'}`;\n    }\n}\nconst Class = ArgumentFalsyError; // tslint:disable-line:variable-name  no-use-before-declare\n"
  },
  {
    "__docId__": 68,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentFalsyError",
    "memberof": "all/@jali-ms/util/src/argument-falsy-error.js",
    "longname": "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-falsy-error.js",
    "importStyle": "ArgumentFalsyError",
    "description": "Represents that an argument erroneously has a _falsy_ value.\n\nThrow this {@link Error} if a parameter must be _truthy_ and can't be represented by a more\nspecific argument error.",
    "examples": [
      "<caption>The argument for the parameter item is falsy.</caption>\nthrow new ArgumentFalsyError('item');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\" target=\"_blank\">\n   Definition of falsy</a> (MDN)",
      "{@link verifyDefined}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 22,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-error.js~ArgumentError"
    ]
  },
  {
    "__docId__": 69,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError",
    "longname": "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentFalsyError} class.",
    "lineNumber": 34,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must have a\n   truthy value. Yours does not*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 70,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "makeFalsyTypedMessage",
    "memberof": "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError",
    "longname": "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError.makeFalsyTypedMessage",
    "access": "protected",
    "description": "Builds a default error message for subclasses.",
    "lineNumber": 47,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{string}:",
        "description": "[message] -\n   Specified message. Otherwise, a generic message will be created like *Argument must have a\n   truthy value. Yours ${type ? `is '${type}'` : 'does not'*."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{string}:",
        "description": "[type] -\n   value to display in the message. Default is to display no value."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Class",
    "memberof": "all/@jali-ms/util/src/argument-falsy-error.js",
    "longname": "all/@jali-ms/util/src/argument-falsy-error.js~Class",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-falsy-error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-nan-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-nan-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentFalsyError } from './argument-falsy-error';\n/**\n * Represents that an argument erroneously has a value of `NaN`.\n *\n * Throw this {@link Error} if a parameter must be a `number`.\n *\n * @example <caption>The argument for the parameter price is `NaN`.</caption>\n * throw new ArgumentNanError('price');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link verifyNumber}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentNanError extends ArgumentFalsyError {\n    /**\n     * Initializes a new instance of the {@link ArgumentNanError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must have a\n     *    truthy value. Yours is 'NaN'*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, ArgumentFalsyError.makeFalsyTypedMessage(message, 'NaN'));\n    }\n}\n"
  },
  {
    "__docId__": 73,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentNanError",
    "memberof": "all/@jali-ms/util/src/argument-nan-error.js",
    "longname": "all/@jali-ms/util/src/argument-nan-error.js~ArgumentNanError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-nan-error.js",
    "importStyle": "ArgumentNanError",
    "description": "Represents that an argument erroneously has a value of `NaN`.\n\nThrow this {@link Error} if a parameter must be a `number`.",
    "examples": [
      "<caption>The argument for the parameter price is `NaN`.</caption>\nthrow new ArgumentNanError('price');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link verifyNumber}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 19,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError"
    ]
  },
  {
    "__docId__": 74,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-nan-error.js~ArgumentNanError",
    "longname": "all/@jali-ms/util/src/argument-nan-error.js~ArgumentNanError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentNanError} class.",
    "lineNumber": 31,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must have a\n   truthy value. Yours is 'NaN'*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-null-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-null-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentFalsyError } from './argument-falsy-error';\n/**\n * Represents that an argument erroneously has a value of `null`.\n *\n * Throw this {@link Error} if a parameter must be an object.\n *\n * @example <caption>The argument for the parameter entity is `null`.</caption>\n * throw new ArgumentNullError('entity');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link verifyNonNull}\n * @see {@link verifyObject}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentNullError extends ArgumentFalsyError {\n    /**\n     * Initializes a new instance of the {@link ArgumentNullError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must have a\n     *     non-null value. Yours is 'null'*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, message || `Argument must have a non-null value. Yours is 'null'`);\n    }\n}\n"
  },
  {
    "__docId__": 76,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentNullError",
    "memberof": "all/@jali-ms/util/src/argument-null-error.js",
    "longname": "all/@jali-ms/util/src/argument-null-error.js~ArgumentNullError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-null-error.js",
    "importStyle": "ArgumentNullError",
    "description": "Represents that an argument erroneously has a value of `null`.\n\nThrow this {@link Error} if a parameter must be an object.",
    "examples": [
      "<caption>The argument for the parameter entity is `null`.</caption>\nthrow new ArgumentNullError('entity');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link verifyNonNull}",
      "{@link verifyObject}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 20,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError"
    ]
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-null-error.js~ArgumentNullError",
    "longname": "all/@jali-ms/util/src/argument-null-error.js~ArgumentNullError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentNullError} class.",
    "lineNumber": 32,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must have a\n    non-null value. Yours is 'null'*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-type-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-type-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentError } from './argument-error';\n/**\n * Represents that an argument has an invalid type or an object with the incorrect structure.\n *\n * Throw this {@link Error} if a parameter has an invalid type and can't be represented by a more\n * specific argument error.\n *\n * @example <caption>The argument for the parameter motor is missing a property.</caption>\n * throw new ArgumentTypeError(\n *    'motor', `The argument is not a valid 'Motor'. It lacks the 'start' method`);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link verifyDefined}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentTypeError extends ArgumentError {\n    /**\n     * Initializes a new instance of the {@link ArgumentTypeError} class.\n     *\n     * @param {!string} type -\n     *    The expected parameter type.\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must have type\n     *    '${type}'. Yours is not*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(type, name, message) {\n        super(name, Class.makeTypeMessage(type, message));\n    }\n    /**\n     * Builds a default error message for subclasses.\n     * @param {!string}: type -\n     *    The expected parameter type.\n     * @param {string}: [message] -\n     *    Specified message. Otherwise, a generic message will be created like *Argument must have\n     *    type '${type}'. Yours is not*.\n     * @protected\n     * @since 0.0.1\n     */\n    static makeTypeMessage(type, message) {\n        return message || `Argument must have type '${type}'. Yours is not`;\n    }\n}\nconst Class = ArgumentTypeError; // tslint:disable-line:variable-name  no-use-before-declare\n"
  },
  {
    "__docId__": 79,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentTypeError",
    "memberof": "all/@jali-ms/util/src/argument-type-error.js",
    "longname": "all/@jali-ms/util/src/argument-type-error.js~ArgumentTypeError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-type-error.js",
    "importStyle": "ArgumentTypeError",
    "description": "Represents that an argument has an invalid type or an object with the incorrect structure.\n\nThrow this {@link Error} if a parameter has an invalid type and can't be represented by a more\nspecific argument error.",
    "examples": [
      "<caption>The argument for the parameter motor is missing a property.</caption>\nthrow new ArgumentTypeError(\n   'motor', `The argument is not a valid 'Motor'. It lacks the 'start' method`);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link verifyDefined}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 21,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-error.js~ArgumentError"
    ]
  },
  {
    "__docId__": 80,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-type-error.js~ArgumentTypeError",
    "longname": "all/@jali-ms/util/src/argument-type-error.js~ArgumentTypeError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentTypeError} class.",
    "lineNumber": 35,
    "since": "0.0.1",
    "params": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The expected parameter type."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must have type\n   '${type}'. Yours is not*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "makeTypeMessage",
    "memberof": "all/@jali-ms/util/src/argument-type-error.js~ArgumentTypeError",
    "longname": "all/@jali-ms/util/src/argument-type-error.js~ArgumentTypeError.makeTypeMessage",
    "access": "protected",
    "description": "Builds a default error message for subclasses.",
    "lineNumber": 48,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{!string}:",
        "description": "type -\n   The expected parameter type."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{string}:",
        "description": "[message] -\n   Specified message. Otherwise, a generic message will be created like *Argument must have\n   type '${type}'. Yours is not*."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Class",
    "memberof": "all/@jali-ms/util/src/argument-type-error.js",
    "longname": "all/@jali-ms/util/src/argument-type-error.js~Class",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-type-error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-undefined-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-undefined-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentFalsyError } from './argument-falsy-error';\n/**\n * Represents that an argument erroneously is 'undefined'.\n *\n * Throw this {@link Error} if a parameter must have a value.\n *\n * @example <caption>The argument for the parameter element is undefined.</caption>\n * throw new ArgumentUndefinedError('element');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link verifyDefined}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentUndefinedError extends ArgumentFalsyError {\n    /**\n     * Initializes a new instance of the {@link ArgumentUndefinedError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must be\n     *    defined. Yours is 'undefined*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, message || `Argument must be defined. Yours is 'undefined'`);\n    }\n}\n"
  },
  {
    "__docId__": 84,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentUndefinedError",
    "memberof": "all/@jali-ms/util/src/argument-undefined-error.js",
    "longname": "all/@jali-ms/util/src/argument-undefined-error.js~ArgumentUndefinedError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-undefined-error.js",
    "importStyle": "ArgumentUndefinedError",
    "description": "Represents that an argument erroneously is 'undefined'.\n\nThrow this {@link Error} if a parameter must have a value.",
    "examples": [
      "<caption>The argument for the parameter element is undefined.</caption>\nthrow new ArgumentUndefinedError('element');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link verifyDefined}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 19,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError"
    ]
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-undefined-error.js~ArgumentUndefinedError",
    "longname": "all/@jali-ms/util/src/argument-undefined-error.js~ArgumentUndefinedError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentUndefinedError} class.",
    "lineNumber": 31,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must be\n   defined. Yours is 'undefined*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-verifiers.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-verifiers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import * as TypeGuards from './type-guards';\nimport ArgumentEmptyStringError from './argument-empty-string-error';\nimport ArgumentError from './argument-error';\nimport ArgumentFalseError from './argument-false-error';\nimport ArgumentFalsyError from './argument-falsy-error';\nimport ArgumentNanError from './argument-nan-error';\nimport ArgumentNullError from './argument-null-error';\nimport ArgumentTypeError from './argument-type-error';\nimport ArgumentUndefinedError from './argument-undefined-error';\nimport ArgumentWhitespaceStringError from './argument-whitespace-string-error';\nimport ArgumentZeroError from './argument-zero-error';\n/**\n * Throws an error if the specified argument value does not pass the specified test.\n *\n * @param T -\n *    The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!string} name -\n *    The formal parameter name.\n * @param {T} value -\n *    The function argument.\n * @param {!function(value: T) => boolean} test -\n *    Evaluates whether the value meets expectations.\n * @param {(string | function(value: string): string)} [message] -\n *    Optional custom message or message factory.\n *\n * @throws {ArgumentError}\n *    The test failed.\n *\n * @example <caption>verify that parameter deposit is non-negative</caption>\n * verifyArgument('deposit', deposit, arg => arg > 0.0);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code>, examples ④ & ⑤</a>\n * @see {@link ArgumentError}\n * @see {@link verifyDefined}\n * @see {@link verifyTruthy}\n * @since 0.0.1\n */\nexport function verifyArgument(name, value, test, message) {\n    if (!test(value)) {\n        throw new ArgumentError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument is not an `Array`.\n *\n * > **Note:** Calls {@link Array.isArray}.\n *\n * @param T -\n *    The `element` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!string} name -\n *    The formal parameter name.\n * @param {T} value -\n *    The function argument.\n * @param {(string | function(value: string): string)} [message] -\n *    Optional custom message or message factory.\n *\n * @throws {ArgumentUndefinedError}\n *    The argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    The argument is not an `Array`.\n *\n * @example <caption>verify that parameter collection is an Array</caption>\n * verifyArray('collection', collection);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link isIterable}\n * @see {@link verifyIterable}\n * @since 0.0.1\n */\nexport function verifyArray(name, value, message) {\n    verifyDefined(name, value, message);\n    if (!Array.isArray(value)) {\n        throw new ArgumentTypeError('Array', name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument is not strictly a boolean value.\n *\n * > **Note:** If you want to test for _truthy_ values, use {@link verifyTruthy}.\n *\n * @param {!string} name -\n *    The formal parameter name.\n * @param {boolean} value -\n *    The function argument.\n * @param {(string | function(value: string): string)} [message] -\n *    Optional custom message or message factory.\n *\n * @throws {ArgumentUndefinedError}\n *    The argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    The argument is not `boolean`.\n *\n * @example <caption>verify that parameter isValid is boolean</caption>\n * verifyBoolean('isValid', isValid);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentUndefinedError}\n * @see {@link verifyDefined}\n * @see {@link verifyTruthy}\n * @since 0.0.1\n */\nexport function verifyBoolean(name, value, message) {\n    verifyDefined(name, value, message);\n    if (typeof value !== 'boolean') {\n        throw new ArgumentTypeError('boolean', name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument is `undefined`.\n *\n * > **Note:** If you want to test for _truthy_ values, use {@link verifyTruthy}.\n *\n * @param T -\n *    The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!string} name -\n *    The formal parameter name.\n * @param {T} value -\n *    The function argument.\n * @param {(string | function(value: string): string)} [message] -\n *    Optional custom message or message factory.\n *\n * @throws {ArgumentUndefinedError}\n *    The argument is `undefined`.\n *\n * @example <caption>verify that parameter element is defined</caption>\n * verifyDefined('element', element);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link verifyTruthy}\n * @since 0.0.1\n */\nexport function verifyDefined(name, value, message) {\n    if (value === undefined) {\n        throw new ArgumentUndefinedError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument is not strictly a function expression.\n *\n * > **Note:** If you want to test for _truthy_ values, use {@link verifyTruthy}.\n *\n * @param {!string} name -\n *    The formal parameter name.\n * @param {Function} value -\n *    The function argument.\n * @param {(string | function(value: string): string)} [message] -\n *    Optional custom message or message factory.\n *\n * @throws {ArgumentUndefinedError}\n *    The argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    The argument is not a `function`.\n *\n * @example <caption>verify that parameter factory is a function</caption>\n * verifyFunction('factory', factory);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentUndefinedError}\n * @see {@link verifyDefined}\n * @see {@link verifyTruthy}\n * @since 0.0.1\n */\nexport function verifyFunction(name, value, message) {\n    verifyDefined(name, value, message);\n    if (typeof value !== 'function') {\n        throw new ArgumentTypeError('function', name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument does not support iteration.\n *\n * > **Note:** Calls {@link isIterable} to determine iterability.\n *\n * @param T -\n *    The `element` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!string} name -\n *    The formal parameter name.\n * @param {T} value -\n *    The function argument.\n * @param {(string | function(value: string): string)} [message] -\n *    Optional custom message or message factory.\n *\n * @throws {ArgumentUndefinedError}\n *    The argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    The argument does not support iteration.\n *\n * @example <caption>verify that parameter collection is iterable</caption>\n * verifyIterable('collection', collection);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link isIterable}\n * @see {@link verifyArray}\n * @since 0.0.1\n */\nexport function verifyIterable(name, value, message) {\n    verifyDefined(name, value, message);\n    if (!TypeGuards.isIterable(value)) {\n        throw new ArgumentTypeError('iterable', name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not a non-empty string.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {string} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `string`.\n * @throws {ArgumentEmptyStringError}\n *    the argument is an empty `string`.\n *\n * @example <caption>verify that parameter firstName is a non-empty string</caption>\n * verifyNonEmpty('firstName', firstName);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code>, example ②</a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentEmptyStringError}\n * @see {@link verifyDefined}\n * @see {@link verifyString}\n * @see {@link verifyNotWhitespace}\n * @since 0.0.1\n */\nexport function verifyNonEmpty(name, value, message) {\n    verifyString(name, value, message);\n    if (value === '') {\n        throw new ArgumentEmptyStringError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not a non-zero number.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {number} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `number`.\n * @throws {ArgumentNanError}\n *    the argument is `NaN`.\n * @throws {ArgumentZeroError}\n *    the argument is a number the value zero.\n *\n * @example <caption>verify that parameter height has a nonzero value</caption>\n * verifyNonEmpty('height', height);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentNanError}\n * @see {@link ArgumentZeroError}\n * @see {@link verifyDefined}\n * @see {@link verifyNumber}\n * @since 0.0.1\n */\nexport function verifyNonZero(name, value, message) {\n    verifyNumber(name, value, message);\n    if (value === 0) {\n        throw new ArgumentZeroError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is `undefined` or `null`.\n *\n * > **Note:** Consider using {@link verifyTruthy} or {@link verifyObject}.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {number} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `number`.\n * @throws {ArgumentNanError}\n *    the argument is `NaN`.\n * @throws {ArgumentZeroError}\n *    the argument is a number the value zero.\n *\n * @example <caption>verify that parameter height has a nonzero value</caption>\n * verifyNonEmpty('height', height);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code>, example ①</a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentNanError}\n * @see {@link ArgumentZeroError}\n * @see {@link verifyDefined}\n * @see {@link verifyNumber}\n * @since 0.0.1\n */\nexport function verifyNotNull(name, value, message) {\n    verifyDefined(name, value, message);\n    if (value === null) {\n        throw new ArgumentNullError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument is not a string with non whitespace characters.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {string} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `string`.\n * @throws {ArgumentEmptyStringError}\n *    the argument is an empty `string`.\n * @throws {ArgumentWhitespaceStringError}\n *    the argument has only whitespace characters.\n *\n * @example <caption>verify that parameter firstName has non-whitespace characters</caption>\n * verifyNotWhitespace('firstName', firstName);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code>, example ②</a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentEmptyStringError}\n * @see {@link ArgumentWhitespaceStringError}\n * @see {@link verifyDefined}\n * @see {@link verifyString}\n * @see {@link verifyNonEmpty}\n * @since 0.0.1\n */\nexport function verifyNotWhitespace(name, value, message) {\n    verifyNonEmpty(name, value, message);\n    if (value.trim() === '') {\n        throw new ArgumentWhitespaceStringError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not a `number` or has a value of `NaN`.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {number} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `number`.\n * @throws {ArgumentNanError}\n *    the argument is `NaN`.\n * @throws {ArgumentZeroError}\n *    the argument is a number the value zero.\n *\n * @example <caption>verify that parameter price is a number</caption>\n * verifyNumber('price', price);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentNanError}\n * @see {@link ArgumentZeroError}\n * @see {@link verifyDefined}\n * @see {@link verifyNonZero}\n * @since 0.0.1\n */\nexport function verifyNumber(name, value, message) {\n    verifyDefined(name, value, message);\n    if (typeof value !== 'number') {\n        throw new ArgumentTypeError('number', name, errorMessage(value, message));\n    }\n    if (Number.isNaN(value)) {\n        throw new ArgumentNanError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not an `Object`.\n *\n * > **Note:** To exclude `null` values also call {@link verifyNotNull}\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {Object} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not an `Object`.\n *\n * @example <caption>verify that parameter height has a nonzero value</caption>\n * verifyNonEmpty('height', height);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentNanError}\n * @see {@link ArgumentZeroError}\n * @see {@link verifyDefined}\n * @see {@link verifyNonZero}\n * @since 0.0.1\n */\nexport function verifyObject(name, value, message) {\n    verifyDefined(name, value, message);\n    if (typeof value !== 'object') {\n        throw new ArgumentTypeError('object', name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not a `string`.\n *\n * > **Note:** To verify a meaningful value consider using {@link verifyNonEmpty} or\n * > {@link verifyNotWhitespace}.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {string} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `string`.\n *\n * @example <caption>verify that parameter alphabet is a string</caption>\n * verifyNonEmpty('alphabet', alphabet);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link verifyDefined}\n * @see {@link verifyNonEmpty}\n * @see {@link verifyNotWhitespace}\n * @since 0.0.1\n */\nexport function verifyString(name, value, message) {\n    verifyDefined(name, value, message);\n    if (typeof value !== 'string') {\n        throw new ArgumentTypeError('string', name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not a boolean with the value 'true'.\n *\n * > **Note:** To verify a _truthy_ value, use {@link verifyTruthy}.\n *\n * @param {string} name -\n *    the formal parameter name\n * @param {boolean} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined`.\n * @throws {ArgumentTypeError}\n *    the argument is not a `boolean`.\n * @throws {ArgumentFalseError}\n *    the argument is a number the value zero.\n *\n * @example <caption>verify that parameter isValid is true</caption>\n * verifyNonEmpty('isValid', isValid);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code></a>\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentTypeError}\n * @see {@link ArgumentFalseError}\n * @see {@link verifyDefined}\n * @see {@link verifyBoolean}\n * @see {@link verifyTruthy}\n * @since 0.0.1\n */\nexport function verifyTrue(name, value, message) {\n    verifyBoolean(name, value, message);\n    if (value === false) {\n        throw new ArgumentFalseError(name, errorMessage(value, message));\n    }\n}\n/**\n * Throws an error if the specified argument value is not _truthy_.\n *\n * The `loose` parameter changes what exception is thrown. If `loose`, then only\n * {@link ArgumentFalsyError} is thrown. Otherwise, the exception for the appropriate _falsy_ value\n * is thrown.\n *\n * > **Note:** You can test for any of the _falsy_ values individually using the appropriate\n * > `verify...` function.\n *\n * @param T -\n *    The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {string} name -\n *    the formal parameter name\n * @param {T} value -\n *    the function argument\n * @param {?(string | function(value: string): string)} message -\n *    optional custom message or message factory\n *\n * @throws {ArgumentFalsyError}\n *    the argument is _falsy_ and `loose` is specified.\n * @throws {ArgumentEmptyStringError}\n *    the argument is an empty `string` and `loose` is not specified.\n * @throws {ArgumentFalseError}\n *    the argument has the value `false` and `loose` is not specified.\n * @throws {ArgumentNanError}\n *    the argument has the value `NaN` and `loose` is not specified.\n * @throws {ArgumentNullError}\n *    the argument has the value `null` and `loose` is not specified.\n * @throws {ArgumentUndefinedError}\n *    the argument is `undefined` and `loose` is not specified.\n * @throws {ArgumentUndefinedError}\n *    the argument is zero and `loose` is not specified.\n *\n * @example <caption>verify that parameter item is truthy</caption>\n * verifyTruthy('item', item);\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\" target=\"_blank\">\n *    Definition of falsy</a> (MDN)\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see <a href=\"manual/example.html#jali_util_errors\">\n *    Example method <code>jali_util_errors</code>, example ③</a>\n * @see {@link ArgumentEmptyStringError}\n * @see {@link ArgumentFalseError}\n * @see {@link ArgumentNanError}\n * @see {@link ArgumentNullError}\n * @see {@link ArgumentUndefinedError}\n * @see {@link ArgumentZeroError}\n * @see {@link verifyDefined}\n * @see {@link verifyNonEmpty}\n * @see {@link verifyNonZero}\n * @see {@link verifyNotNull}\n * @see {@link verifyNumber}\n * @see {@link verifyTrue}\n * @since 0.0.1\n */\nexport function verifyTruthy(name, value, loose = false, message) {\n    if (!value) {\n        if (loose) {\n            throw new ArgumentFalsyError(name, errorMessage(value, message));\n        }\n        verifyNotNull(name, value, message); // Also checks for defined.\n        if (typeof value === 'boolean') {\n            verifyTrue(name, value, errorMessage(value, message));\n        }\n        else if (typeof value === 'string') {\n            verifyNonEmpty(name, value, errorMessage(value, message));\n        }\n        else if (typeof value === 'number') {\n            // Also checks for not NaN\n            verifyNonZero(name, value, errorMessage(value, message));\n        }\n    }\n}\nfunction errorMessage(value, message) {\n    return (typeof message === 'function') ? message(value) : message;\n}\n"
  },
  {
    "__docId__": 87,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyArgument",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyArgument",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyArgument}",
    "description": "Throws an error if the specified argument value does not pass the specified test.",
    "examples": [
      "<caption>verify that parameter deposit is non-negative</caption>\nverifyArgument('deposit', deposit, arg => arg > 0.0);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code>, examples ④ & ⑤</a>",
      "{@link ArgumentError}",
      "{@link verifyDefined}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 44,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The formal parameter name."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The function argument."
      },
      {
        "nullable": false,
        "types": [
          "function(value: T) => boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": "Evaluates whether the value meets expectations."
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Optional custom message or message factory."
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentError"
        ],
        "description": "The test failed."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyArray",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyArray",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyArray}",
    "description": "Throws an error if the specified argument is not an `Array`.\n\n> **Note:** Calls {@link Array.isArray}.",
    "examples": [
      "<caption>verify that parameter collection is an Array</caption>\nverifyArray('collection', collection);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link isIterable}",
      "{@link verifyIterable}"
    ],
    "lineNumber": 84,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `element` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The formal parameter name."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The function argument."
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Optional custom message or message factory."
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "The argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "The argument is not an `Array`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyBoolean",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyBoolean",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyBoolean}",
    "description": "Throws an error if the specified argument is not strictly a boolean value.\n\n> **Note:** If you want to test for _truthy_ values, use {@link verifyTruthy}.",
    "examples": [
      "<caption>verify that parameter isValid is boolean</caption>\nverifyBoolean('isValid', isValid);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentTypeError}",
      "{@link ArgumentUndefinedError}",
      "{@link verifyDefined}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 122,
    "since": "0.0.1",
    "params": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The formal parameter name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The function argument."
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Optional custom message or message factory."
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "The argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "The argument is not `boolean`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyDefined",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyDefined",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyDefined}",
    "description": "Throws an error if the specified argument is `undefined`.\n\n> **Note:** If you want to test for _truthy_ values, use {@link verifyTruthy}.",
    "examples": [
      "<caption>verify that parameter element is defined</caption>\nverifyDefined('element', element);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 159,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The formal parameter name."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The function argument."
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Optional custom message or message factory."
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "The argument is `undefined`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyFunction",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyFunction",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyFunction}",
    "description": "Throws an error if the specified argument is not strictly a function expression.\n\n> **Note:** If you want to test for _truthy_ values, use {@link verifyTruthy}.",
    "examples": [
      "<caption>verify that parameter factory is a function</caption>\nverifyFunction('factory', factory);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentTypeError}",
      "{@link ArgumentUndefinedError}",
      "{@link verifyDefined}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 196,
    "since": "0.0.1",
    "params": [
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The formal parameter name."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The function argument."
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Optional custom message or message factory."
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "The argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "The argument is not a `function`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyIterable",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyIterable",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyIterable}",
    "description": "Throws an error if the specified argument does not support iteration.\n\n> **Note:** Calls {@link isIterable} to determine iterability.",
    "examples": [
      "<caption>verify that parameter collection is iterable</caption>\nverifyIterable('collection', collection);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link isIterable}",
      "{@link verifyArray}"
    ],
    "lineNumber": 237,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `element` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The formal parameter name."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The function argument."
      },
      {
        "nullable": null,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Optional custom message or message factory."
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "The argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "The argument does not support iteration."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyNonEmpty",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyNonEmpty",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyNonEmpty}",
    "description": "Throws an error if the specified argument value is not a non-empty string.",
    "examples": [
      "<caption>verify that parameter firstName is a non-empty string</caption>\nverifyNonEmpty('firstName', firstName);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code>, example ②</a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentEmptyStringError}",
      "{@link verifyDefined}",
      "{@link verifyString}",
      "{@link verifyNotWhitespace}"
    ],
    "lineNumber": 277,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `string`."
      },
      {
        "types": [
          "ArgumentEmptyStringError"
        ],
        "description": "the argument is an empty `string`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyNonZero",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyNonZero",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyNonZero}",
    "description": "Throws an error if the specified argument value is not a non-zero number.",
    "examples": [
      "<caption>verify that parameter height has a nonzero value</caption>\nverifyNonEmpty('height', height);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentNanError}",
      "{@link ArgumentZeroError}",
      "{@link verifyDefined}",
      "{@link verifyNumber}"
    ],
    "lineNumber": 319,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `number`."
      },
      {
        "types": [
          "ArgumentNanError"
        ],
        "description": "the argument is `NaN`."
      },
      {
        "types": [
          "ArgumentZeroError"
        ],
        "description": "the argument is a number the value zero."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyNotNull",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyNotNull",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyNotNull}",
    "description": "Throws an error if the specified argument value is `undefined` or `null`.\n\n> **Note:** Consider using {@link verifyTruthy} or {@link verifyObject}.",
    "examples": [
      "<caption>verify that parameter height has a nonzero value</caption>\nverifyNonEmpty('height', height);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code>, example ①</a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentNanError}",
      "{@link ArgumentZeroError}",
      "{@link verifyDefined}",
      "{@link verifyNumber}"
    ],
    "lineNumber": 363,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `number`."
      },
      {
        "types": [
          "ArgumentNanError"
        ],
        "description": "the argument is `NaN`."
      },
      {
        "types": [
          "ArgumentZeroError"
        ],
        "description": "the argument is a number the value zero."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyNotWhitespace",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyNotWhitespace",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyNotWhitespace}",
    "description": "Throws an error if the specified argument is not a string with non whitespace characters.",
    "examples": [
      "<caption>verify that parameter firstName has non-whitespace characters</caption>\nverifyNotWhitespace('firstName', firstName);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code>, example ②</a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentEmptyStringError}",
      "{@link ArgumentWhitespaceStringError}",
      "{@link verifyDefined}",
      "{@link verifyString}",
      "{@link verifyNonEmpty}"
    ],
    "lineNumber": 406,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `string`."
      },
      {
        "types": [
          "ArgumentEmptyStringError"
        ],
        "description": "the argument is an empty `string`."
      },
      {
        "types": [
          "ArgumentWhitespaceStringError"
        ],
        "description": "the argument has only whitespace characters."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyNumber",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyNumber",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyNumber}",
    "description": "Throws an error if the specified argument value is not a `number` or has a value of `NaN`.",
    "examples": [
      "<caption>verify that parameter price is a number</caption>\nverifyNumber('price', price);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentNanError}",
      "{@link ArgumentZeroError}",
      "{@link verifyDefined}",
      "{@link verifyNonZero}"
    ],
    "lineNumber": 448,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `number`."
      },
      {
        "types": [
          "ArgumentNanError"
        ],
        "description": "the argument is `NaN`."
      },
      {
        "types": [
          "ArgumentZeroError"
        ],
        "description": "the argument is a number the value zero."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyObject",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyObject",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyObject}",
    "description": "Throws an error if the specified argument value is not an `Object`.\n\n> **Note:** To exclude `null` values also call {@link verifyNotNull}",
    "examples": [
      "<caption>verify that parameter height has a nonzero value</caption>\nverifyNonEmpty('height', height);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentNanError}",
      "{@link ArgumentZeroError}",
      "{@link verifyDefined}",
      "{@link verifyNonZero}"
    ],
    "lineNumber": 491,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not an `Object`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyString",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyString",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyString}",
    "description": "Throws an error if the specified argument value is not a `string`.\n\n> **Note:** To verify a meaningful value consider using {@link verifyNonEmpty} or\n> {@link verifyNotWhitespace}.",
    "examples": [
      "<caption>verify that parameter alphabet is a string</caption>\nverifyNonEmpty('alphabet', alphabet);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link verifyDefined}",
      "{@link verifyNonEmpty}",
      "{@link verifyNotWhitespace}"
    ],
    "lineNumber": 531,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `string`."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyTrue",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyTrue",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyTrue}",
    "description": "Throws an error if the specified argument value is not a boolean with the value 'true'.\n\n> **Note:** To verify a _truthy_ value, use {@link verifyTruthy}.",
    "examples": [
      "<caption>verify that parameter isValid is true</caption>\nverifyNonEmpty('isValid', isValid);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code></a>",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentTypeError}",
      "{@link ArgumentFalseError}",
      "{@link verifyDefined}",
      "{@link verifyBoolean}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 573,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined`."
      },
      {
        "types": [
          "ArgumentTypeError"
        ],
        "description": "the argument is not a `boolean`."
      },
      {
        "types": [
          "ArgumentFalseError"
        ],
        "description": "the argument is a number the value zero."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "verifyTruthy",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~verifyTruthy",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": "{verifyTruthy}",
    "description": "Throws an error if the specified argument value is not _truthy_.\n\nThe `loose` parameter changes what exception is thrown. If `loose`, then only\n{@link ArgumentFalsyError} is thrown. Otherwise, the exception for the appropriate _falsy_ value\nis thrown.\n\n> **Note:** You can test for any of the _falsy_ values individually using the appropriate\n> `verify...` function.",
    "examples": [
      "<caption>verify that parameter item is truthy</caption>\nverifyTruthy('item', item);"
    ],
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\" target=\"_blank\">\n   Definition of falsy</a> (MDN)",
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "<a href=\"manual/example.html#jali_util_errors\">\n   Example method <code>jali_util_errors</code>, example ③</a>",
      "{@link ArgumentEmptyStringError}",
      "{@link ArgumentFalseError}",
      "{@link ArgumentNanError}",
      "{@link ArgumentNullError}",
      "{@link ArgumentUndefinedError}",
      "{@link ArgumentZeroError}",
      "{@link verifyDefined}",
      "{@link verifyNonEmpty}",
      "{@link verifyNonZero}",
      "{@link verifyNotNull}",
      "{@link verifyNumber}",
      "{@link verifyTrue}"
    ],
    "lineNumber": 639,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the formal parameter name"
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the function argument"
      },
      {
        "nullable": true,
        "types": [
          "string ",
          " function(value: string): string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "optional custom message or message factory"
      }
    ],
    "throws": [
      {
        "types": [
          "ArgumentFalsyError"
        ],
        "description": "the argument is _falsy_ and `loose` is specified."
      },
      {
        "types": [
          "ArgumentEmptyStringError"
        ],
        "description": "the argument is an empty `string` and `loose` is not specified."
      },
      {
        "types": [
          "ArgumentFalseError"
        ],
        "description": "the argument has the value `false` and `loose` is not specified."
      },
      {
        "types": [
          "ArgumentNanError"
        ],
        "description": "the argument has the value `NaN` and `loose` is not specified."
      },
      {
        "types": [
          "ArgumentNullError"
        ],
        "description": "the argument has the value `null` and `loose` is not specified."
      },
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is `undefined` and `loose` is not specified."
      },
      {
        "types": [
          "ArgumentUndefinedError"
        ],
        "description": "the argument is zero and `loose` is not specified."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "errorMessage",
    "memberof": "all/@jali-ms/util/src/argument-verifiers.js",
    "longname": "all/@jali-ms/util/src/argument-verifiers.js~errorMessage",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-verifiers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 657,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-whitespace-string-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-whitespace-string-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentError } from './argument-error';\n/**\n * Represents that a string argument erroneously has only whitespace characters.\n *\n * Throw this {@link Error} if a parameter must have non-whitespace content.\n *\n * @example <caption>The string argument for the parameter firstName has only whitespace.</caption>\n * throw new ArgumentWhitespaceStringError('firstName');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link ArgumentEmptyStringError}\n * @see {@link verifyNonEmpty}\n * @see {@link verifyNotWhitespace}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentWhitespaceStringError extends ArgumentError {\n    /**\n     * Initializes a new instance of the {@link ArgumentEmptyStringError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must contain\n     *    non-whitespace characters. Yours has only whitespace*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, message || 'Argument must contain non-whitespace characters. Yours has only whitespace');\n    }\n}\n"
  },
  {
    "__docId__": 104,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentWhitespaceStringError",
    "memberof": "all/@jali-ms/util/src/argument-whitespace-string-error.js",
    "longname": "all/@jali-ms/util/src/argument-whitespace-string-error.js~ArgumentWhitespaceStringError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-whitespace-string-error.js",
    "importStyle": "ArgumentWhitespaceStringError",
    "description": "Represents that a string argument erroneously has only whitespace characters.\n\nThrow this {@link Error} if a parameter must have non-whitespace content.",
    "examples": [
      "<caption>The string argument for the parameter firstName has only whitespace.</caption>\nthrow new ArgumentWhitespaceStringError('firstName');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link ArgumentEmptyStringError}",
      "{@link verifyNonEmpty}",
      "{@link verifyNotWhitespace}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 21,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-error.js~ArgumentError"
    ]
  },
  {
    "__docId__": 105,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-whitespace-string-error.js~ArgumentWhitespaceStringError",
    "longname": "all/@jali-ms/util/src/argument-whitespace-string-error.js~ArgumentWhitespaceStringError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentEmptyStringError} class.",
    "lineNumber": 33,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must contain\n   non-whitespace characters. Yours has only whitespace*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 106,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/argument-zero-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/argument-zero-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { default as ArgumentFalsyError } from './argument-falsy-error';\n/**\n * Represents that an argument erroneously has a value of zero.\n *\n * Throw this {@link Error} if a parameter must have a non-zero value.\n *\n * @example <caption>The argument for the parameter height is zero.</caption>\n * throw new ArgumentZeroError('height');\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-errors\">\n *    module <code>@jali-ms/util/errors</code></a>\n * @see {@link verifyNonZero}\n * @see {@link verifyTruthy}\n * @public\n * @since 0.0.1\n */\nexport default class ArgumentZeroError extends ArgumentFalsyError {\n    /**\n     * Initializes a new instance of the {@link ArgumentZeroError} class.\n     *\n     * @param {string} [name] -\n     *    The parameter name. Default is no name.\n     * @param {string} [message] -\n     *    Specified message. Otherwise, a generic message will be used like *Argument must have a\n     *    truthy value. Yours is 'zero'*.\n     * @public\n     * @since 0.0.1\n     */\n    constructor(name, message) {\n        super(name, ArgumentFalsyError.makeFalsyTypedMessage(message, 'zero'));\n    }\n}\n"
  },
  {
    "__docId__": 107,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArgumentZeroError",
    "memberof": "all/@jali-ms/util/src/argument-zero-error.js",
    "longname": "all/@jali-ms/util/src/argument-zero-error.js~ArgumentZeroError",
    "access": "public",
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/argument-zero-error.js",
    "importStyle": "ArgumentZeroError",
    "description": "Represents that an argument erroneously has a value of zero.\n\nThrow this {@link Error} if a parameter must have a non-zero value.",
    "examples": [
      "<caption>The argument for the parameter height is zero.</caption>\nthrow new ArgumentZeroError('height');"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-errors\">\n   module <code>@jali-ms/util/errors</code></a>",
      "{@link verifyNonZero}",
      "{@link verifyTruthy}"
    ],
    "lineNumber": 19,
    "since": "0.0.1",
    "interface": false,
    "extends": [
      "all/@jali-ms/util/src/argument-falsy-error.js~ArgumentFalsyError"
    ]
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/argument-zero-error.js~ArgumentZeroError",
    "longname": "all/@jali-ms/util/src/argument-zero-error.js~ArgumentZeroError#constructor",
    "access": "public",
    "description": "Initializes a new instance of the {@link ArgumentZeroError} class.",
    "lineNumber": 31,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The parameter name. Default is no name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "Specified message. Otherwise, a generic message will be used like *Argument must have a\n   truthy value. Yours is 'zero'*."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/invalid-state-error.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/invalid-state-error.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export default class InvalidStateError extends Error {\n    constructor(message) {\n        super(Class.makeMessage(message));\n    }\n    static makeMessage(specified) {\n        return specified || `Function called against data in an invalid state.`;\n    }\n}\nconst Class = InvalidStateError; // tslint:disable-line:variable-name no-use-before-declare\n"
  },
  {
    "__docId__": 110,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "InvalidStateError",
    "memberof": "all/@jali-ms/util/src/invalid-state-error.js",
    "longname": "all/@jali-ms/util/src/invalid-state-error.js~InvalidStateError",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/invalid-state-error.js",
    "importStyle": "InvalidStateError",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "all/@jali-ms/util/src/invalid-state-error.js~InvalidStateError",
    "longname": "all/@jali-ms/util/src/invalid-state-error.js~InvalidStateError#constructor",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "makeMessage",
    "memberof": "all/@jali-ms/util/src/invalid-state-error.js~InvalidStateError",
    "longname": "all/@jali-ms/util/src/invalid-state-error.js~InvalidStateError.makeMessage",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "specified",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Class",
    "memberof": "all/@jali-ms/util/src/invalid-state-error.js",
    "longname": "all/@jali-ms/util/src/invalid-state-error.js~Class",
    "access": null,
    "export": false,
    "importPath": "jali-srcs/all/@jali-ms/util/src/invalid-state-error.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/iterables.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/iterables.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import * as ArgumentVerifiers from './argument-verifiers';\nimport { isIterable, makeIsIterable } from './type-guards';\n/**\n * @typedef {function} ElementTest -\n *    test performed on elements of a sequence\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!T} element -\n *    The iteration element\n * @param {!number} index -\n *    The index of the element\n * @param {!Iterable<T>} sequence -\n *    The sequence being iterated\n * @return {boolean} -\n *    A value indicating whether the specified element passed the test.\n */\n/**\n * @typedef {function} ElementConverter -\n *    Converts the input sequence element to an output sequence element.\n * @param T -\n *    The input `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n *    of the function.\n * @param U -\n *    The output `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n *    of the function.\n * @param {!T} element -\n *    The iteration element\n * @param {!number} index -\n *    The index of the element\n * @param {!Iterable<T>} sequence -\n *    The sequence being iterated\n * @return {U} -\n *    The converted value.\n */\n/**\n * @typedef {function} ElementAccumulator -\n *    Aggregates the input sequence elements to an output value.\n * @param T -\n *    The input `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n *    of the function.\n * @param U -\n *    The output `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n *    of the function.\n * @param {!U} previousValue -\n *    For the first execution either an `initialValue`, if specified, or the first element in the\n *    sequence. Otherwise, an intermediary accumulated value.\n * @param {!T} currentValue -\n *    The iteration element.\n * @param {!currentIndex} index -\n *    The index of the iteration element\n * @param {!Iterable<T>} sequence -\n *    The sequence being iterated\n * @return {U} -\n *    The accumulated value.\n */\n/* tslint:disable:max-line-length */\n/**\n * Converts an argument that could either be a value of a type or a sequence of that type to\n * an array of that type.\n *\n * Specify the constructor to specify the iteration type. Use for values, such as strings, that are\n * also iterables of another type.\n *\n * > **Note:** To treat a string as a value rather than a sequence of characters, you must specify\n * > the `String` constructor.\n *\n * > **Note:** To only ensure an iterable value, use {@link asIterable}.\n *\n * > **Note:** {@link asArray} is different from\n * > <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"\n * > target=\"_blank\">Array.from</a> or the\n * > <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\"\n * > target=\"_blank\">spread operator</a>, which only convert an iterable to an array.\n * > {@link asArray} ensures a value that can be a scalar value or an array of values is converted\n * > to an array.\n *\n * @param T -\n *    The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {?(T | Iterable<T>)} valueOrSequence -\n *    A value that could be a value or an Iterable of that value type.\n * @param {function (...args: any[]): T} [ctor] -\n *    Optional constructor for the type being iterated.\n * @return {Array<T>} an array of the value type.\n *\n * @example <caption>ensures argument personOrPersons is converted to an array</caption>\n * const persons = Iterables.asArray(personOrPersons);\n *\n * @example <caption>ensures string argument colorOrColors is converted to an array</caption>\n * const persons = Iterables.asArray(colorOrColors, String);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-iterables\">\n *    module <code>@jali-ms/util/iterables</code></a>\n * @see <a href=\"manual/example.html#jali_util_iterators_asarray\">\n *    Example method <code>jali_util_iterators_asarray</code>, examples ① & ②</a>\n * @see {@link asIterable}\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"\n *    target=\"_blank\">Array.from (MDN)</a>\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\"\n *    target=\"_blank\">spread syntax (MDN)</a>\n * @since 0.0.1\n */\nexport function asArray(valueOrSequence, ctor) {\n    /* tslint:enable:max-line-length */\n    if (valueOrSequence === undefined) {\n        return [];\n    }\n    if (typeof ctor !== 'undefined') {\n        // Quiet Typescript 2.1.beta / VSCode 1.4.0 compiler error.\n        // tslint:disable:no-shadowed-variable\n        const localCtor = ctor;\n        if (valueOrSequence instanceof localCtor ||\n            typeof valueOrSequence === 'string' && localCtor === String) {\n            return [valueOrSequence];\n        }\n        const iterableTypeGuard = makeIsIterable(e => e instanceof localCtor, false);\n        if (iterableTypeGuard(valueOrSequence)) {\n            if (Array.isArray(valueOrSequence)) {\n                return valueOrSequence;\n            }\n            return [...valueOrSequence];\n        }\n    }\n    if (Array.isArray(valueOrSequence)) {\n        return valueOrSequence;\n    }\n    if (isIterable(valueOrSequence)) {\n        return [...valueOrSequence];\n    }\n    return [valueOrSequence];\n}\n/**\n * Converts an argument that could either be a value of a type or a sequence of that type to\n * a sequence of that type.\n *\n * Specify the constructor to specify the iteration type. Use for values, such as strings, that are\n * also iterables of another type.\n *\n * > **Note:** To treat a string as a value rather than a sequence of characters, you must specify\n * > the `String` constructor.\n *\n * > **Note:** To ensure an Array value, use {@link toArray}.\n *\n * @param T -\n *    The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {T | Iterable<T>} valueOrSequence -\n *    A value that could be a value or an Iterable of that value type.\n * @param {function (...args: any[]): T} [ctor] -\n *    Optional constructor for the type being iterated.\n * @return {Iterable<T>}\n *\n * @example <caption>ensures argument idOrIds is converted to an iterable</caption>\n * const ids = Iterables.asIterable(idOrIds);\n *\n * @see <a href=\"manual/overview.html#package-jali-util\">\n *    package <code>@jali-ms/util</code></a>\n * @see <a href=\"manual/overview.html#module-jali-util-iterables\">\n *    module <code>@jali-ms/util/iterables</code></a>\n * @see <a href=\"manual/example.html#jali_util_iterators_asiterable\">\n *    Example method <code>jali_util_iterators_asiterable</code>, examples ① & ②</a>\n * @see {@link asArray}\n * @since 0.0.1\n */\nexport function asIterable(valueOrSequence, ctor) {\n    if (typeof valueOrSequence === 'undefined') {\n        return [];\n    }\n    if (typeof ctor !== 'undefined') {\n        // Quiet Typescript 2.1.beta / VSCode 1.4.0 compiler error.\n        // tslint:disable:no-shadowed-variable\n        const localCtor = ctor;\n        if (valueOrSequence instanceof localCtor ||\n            typeof valueOrSequence === 'string' && localCtor === String) {\n            return [valueOrSequence];\n        }\n        const iterableTypeGuard = makeIsIterable(e => e instanceof localCtor, false);\n        if (iterableTypeGuard(valueOrSequence)) {\n            if (Array.isArray(valueOrSequence)) {\n                return valueOrSequence;\n            }\n            return [...valueOrSequence];\n        }\n    }\n    if (Array.isArray(valueOrSequence)) {\n        return valueOrSequence;\n    }\n    if (isIterable(valueOrSequence)) {\n        return [...valueOrSequence];\n    }\n    return [valueOrSequence];\n}\n/* tslint:disable:max-line-length */\n/**\n * Concatenates a sequence of a type with zero or more other sequences of that type.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {!Iterable<T>[]} items -\n *    Array of `Iterable` to concatenate.\n * @returns {Iterable<T>} -\n *    A sequence of elements\n *\n * @see <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat'\n *     target=\"_blank\">Array#concat</a>\n *\n * @since 0.0.1\n */\nexport function* concat(sequence, ...items) {\n    /* tslint:enable:max-line-length */\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    ArgumentVerifiers.verifyArray('items', items);\n    // In concat, do not check for array since items may also not be arrays.\n    for (const element of sequence) {\n        yield element;\n    }\n    for (const item of items) {\n        for (const element of item) {\n            yield element;\n        }\n    }\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns a value indicating whether every element fulfills the specified test.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {!ElementTest<T>} test -\n *    A function that returns a value indicating whether an element of the sequence fulfills the\n *    requirement.\n *\n * @see <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every'\n *     target=\"_blank\">Array#every</a>\n *\n * @since 0.0.1\n */\nexport function every(sequence, test) {\n    /* tslint:enable:max-line-length */\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    ArgumentVerifiers.verifyFunction('test', test);\n    if (Array.isArray(sequence)) {\n        return sequence.every(test);\n    }\n    let index = 0;\n    for (const element of sequence) {\n        if (!test(element, index, sequence)) {\n            return false;\n        }\n        index += 1;\n    }\n    return true;\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns a subset of the sequence of those elements that pass the specified test.\n *\n * > **Note:** To return whether a match was found, use {@link includes}. To return the first\n * > matching value, use {@link find}.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {!ElementTest<T>} test -\n *    The filter function\n * @return {Iterable<T>} -\n *    A sequence of elements\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\n *     target=\"_blank\">Array#filter</a>\n * @see {@link find}\n * @see {@link includes}\n * @since 0.0.1\n */\nexport function* filter(sequence, test) {\n    /* tslint:enable:max-line-length */\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    ArgumentVerifiers.verifyFunction('test', test);\n    let index = 0;\n    for (let element of sequence) {\n        if (test(element, index, sequence)) {\n            yield element;\n        }\n        index += 1;\n    }\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns the first value matching the specified test or `undefined` if no match was found. If no\n * test is specified, returns the first element, or `undefined` if the sequence is empty.\n *\n * > **Note:** To return whether a match was found, use {@link some}. To match a specific element\n * > value, use {@link includes}. To return all matching values, use {@link filter}.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {ElementTest<T>} [test] -\n *    A function that returns a value indicating whether an element of the sequence fulfills the\n *    requirement.\n * @return {T | undefined} -\n *    The matched element or `undefined` if no match is found.\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"\n *     target=\"_blank\">Array#find</a>\n * @see {@link filter}\n * @see {@link includes}\n * @see {@link some}\n * @since 0.0.1\n */\nexport function find(sequence, test) {\n    /* tslint:enable:max-line-length */\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    if (test) {\n        ArgumentVerifiers.verifyFunction('test', test);\n    }\n    ;\n    if (!test) {\n        for (const element of sequence) {\n            return element;\n        }\n        return undefined;\n    }\n    if (Array.isArray(sequence)) {\n        return sequence.find(test);\n    }\n    let index = 0;\n    for (let element of sequence) {\n        if (test(element, index, sequence)) {\n            return element;\n        }\n    }\n    return undefined;\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns a value indicating whether a match for the specified test was found.\n *\n * > **Note:** To return the first matching value, use {@link find}. To return all matching values\n * > use {@link filter}.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {?T} value -\n *    The value search for strictly.\n * @param {number} [fromIndex] -\n * @return {boolean} -\n *    `true` if the element was found; otherwise, `false`.\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"\n *     target=\"_blank\">Array#includes</a>\n * @see {@link find}\n * @see {@link filter}\n * @since 0.0.1\n */\nexport function includes(sequence, value, fromIndex) {\n    /* tslint:enable:max-line-length */\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    if (fromIndex) {\n        ArgumentVerifiers.verifyNumber('fromIndex', fromIndex);\n    }\n    sequence.includes(value, fromIndex);\n    const test = Number.isNaN(value)\n        ? (e) => Number.isNaN(e)\n        : (e) => e === value;\n    const localSequence = fromIndex\n        ? slice(sequence, fromIndex)\n        : sequence;\n    return some(localSequence, test);\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns a sequence of elements that are the result of calling the specified converter function on\n * each element.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param U -\n *    The result type of the converter function. NOTE: This is a TypeScript type parameter, not a\n *    parameter of the function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {!ElementConverter<T, U>} converter -\n *    The element conversion function.\n * @return {Iterable<U>} -\n *    A sequence of converted elements.\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\n *     target=\"_blank\">Array#map</a>\n *\n * @since 0.0.1\n */\nexport function* map(sequence, converter) {\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    ArgumentVerifiers.verifyFunction('converter', converter);\n    if (Array.isArray(sequence)) {\n        yield* sequence.map(converter);\n        return;\n    }\n    let index = 0;\n    for (const element of sequence) {\n        yield converter(element, index, sequence);\n        index += 1;\n    }\n}\n/* tslint:disable:max-line-length */\n/**\n * Aggregates a sequence to a single computed element value.\n *\n * If `initialValue` is specified `accumulator` is called for the first element using the initial\n * value. Otherwise, it is called against the second element using the first element as the initial\n * value.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param U -\n *    The accumulator result type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {!ElementAccumulator<T, U>} accumulator -\n *    The element aggregation function\n * @param {T} [initialValue] -\n *    Optional initial value; otherwise, first element is used as initial value\n * @return {Iterable<U>} -\n *    A sequence of converted elements\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"\n *     target=\"_blank\">Array#reduce</a>\n *\n * @since 0.0.1\n */\nexport function reduce(sequence, accumulator, initialValue) {\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    ArgumentVerifiers.verifyFunction('accumulator', accumulator);\n    let index = 0;\n    // Assignment to quiet TypeScript compiler.\n    let value = undefined;\n    for (const element of sequence) {\n        if (index === 0) {\n            if (initialValue !== undefined) {\n                value = accumulator(initialValue, element, index, sequence);\n            }\n            else {\n                value = element;\n            }\n        }\n        else {\n            value = accumulator(value, element, index, sequence);\n        }\n        index = index + 1;\n    }\n    return value;\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns a segment of the original sequence.\n *\n * Skips `begin` elements and takes `end - begin` elements or the rest of the elements if `end` is\n * not specified. If begin is past the last element, no elements are returned. If `begin` or `end`\n * is a negative value, the sequence is converted to an array and <a\n * href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"\n * target=\"_blank\">Array#slice</a> is called.\n *\n * > **Note:** To retrieve the first element, use {@link first} or {@link firstOrDefault}.\n *\n * @param T -\n *    The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n *    function.\n * @param {!Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {number} [begin] -\n *    The first element to include. If negative, converts to an array and uses <a\n *    href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"\n *    target=\"_blank\">Array#slice</a>\n * @param {number} [end] -\n *    The first element to include.\n *\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"\n *     target=\"_blank\">Array#slice</a>\n *\n * @since 0.0.1\n */\nexport function* slice(sequence, begin, end) {\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    if (begin !== undefined) {\n        ArgumentVerifiers.verifyNumber('begin', begin);\n    }\n    if (end !== undefined) {\n        ArgumentVerifiers.verifyNumber('end', end);\n    }\n    if (Array.isArray(sequence)) {\n        return yield* sequence.slice(begin, end);\n    }\n    if (begin < 0 || end < 0) {\n        return [...sequence].slice(begin, end);\n    }\n    let index = 0;\n    for (const element of sequence) {\n        if (index >= begin || 0) {\n            if (end !== undefined && index === end) {\n                break;\n            }\n            yield element;\n        }\n        index += 1;\n    }\n}\n/* tslint:disable:max-line-length */\n/**\n * Returns a value indicating whether any of the elements of a sequence pass the specified test.\n *\n * > **Note:** To return the first matching value, use {@link find}. To return all matching values,\n * > use {@link filter}. To match on equality, use {@link includes}.\n *\n * @param T -\n *    The `Iterator` element type. <b>NOTE:</b> This is a TypeScript type parameter, not a\n *    parameter of the function.\n * @param {Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {?ElementTest<T>} [test] -\n *    If not defined, indicates that the function should test for any existing elements; otherwise,\n *    a function that indicates whether an element meets a requirement.\n * @return {boolean} -\n *    `true` if an element was found that meets the test; otherwise, `false`;\n * @see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"\n *     target=\"_blank\">Array#some</a>\n * @see {@link filter}\n * @see {@link find}\n * @see {@link includes}\n * @since 0.0.1\n */\nexport function some(sequence, test) {\n    /* tslint:enable:max-line-length */\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    if (test === undefined) {\n        for (let element of sequence) {\n            element = element; // This quiets the compiler error for `noUnusedLocals`.\n            return true;\n        }\n        return false;\n    }\n    if (Array.isArray(sequence)) {\n        return sequence.some(test);\n    }\n    let index = 0;\n    for (let element of sequence) {\n        if (test(element, index, sequence)) {\n            return true;\n        }\n        index += 1;\n    }\n    return false;\n}\n/**\n * Converts a sequence to a {@link Map} using the specified key selector function.\n *\n * @param TKey -\n *    The key type for the {@link Map}. NOTE: This is a TypeScript type parameter, not a parameter\n *    of the function.\n * @param TValue -\n *    The `Iterable` element type and the value type for the {@link Map}. NOTE: This is a TypeScript\n *    type parameter, not a parameter of the function.\n * @param {Iterable<T>} sequence -\n *    The `Iterable` to operate on\n * @param {function(value: TValue): TKey} keySelector -\n *    The function that retrieves a key for the specified element.\n * @return {Map<TKey, TValue>} -\n *    The new map.\n * @since 0.0.1\n */\nexport function toMap(sequence, keySelector) {\n    ArgumentVerifiers.verifyIterable('sequence', sequence);\n    ArgumentVerifiers.verifyFunction('keySelector', keySelector);\n    let map = new Map();\n    for (const value of sequence) {\n        map.set(keySelector(value), value);\n    }\n    return map;\n}\n"
  },
  {
    "__docId__": 115,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "ElementTest",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~ElementTest",
    "access": null,
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The iteration element"
      },
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the element"
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The sequence being iterated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "A value indicating whether the specified element passed the test."
    },
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "ElementTest"
    }
  },
  {
    "__docId__": 116,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "ElementConverter",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~ElementConverter",
    "access": null,
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The input `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n   of the function."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "U",
        "description": "The output `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n   of the function."
      },
      {
        "nullable": false,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The iteration element"
      },
      {
        "nullable": false,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the element"
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The sequence being iterated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "U"
      ],
      "spread": false,
      "description": "The converted value."
    },
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "ElementConverter"
    }
  },
  {
    "__docId__": 117,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "ElementAccumulator",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~ElementAccumulator",
    "access": null,
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The input `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n   of the function."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "U",
        "description": "The output `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter\n   of the function."
      },
      {
        "nullable": false,
        "types": [
          "U"
        ],
        "spread": false,
        "optional": false,
        "name": "previousValue",
        "description": "For the first execution either an `initialValue`, if specified, or the first element in the\n   sequence. Otherwise, an intermediary accumulated value."
      },
      {
        "nullable": false,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "currentValue",
        "description": "The iteration element."
      },
      {
        "nullable": false,
        "types": [
          "currentIndex"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the iteration element"
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The sequence being iterated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "U"
      ],
      "spread": false,
      "description": "The accumulated value."
    },
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "ElementAccumulator"
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "asArray",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~asArray",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{asArray}",
    "description": "Converts an argument that could either be a value of a type or a sequence of that type to\nan array of that type.\n\nSpecify the constructor to specify the iteration type. Use for values, such as strings, that are\nalso iterables of another type.\n\n> **Note:** To treat a string as a value rather than a sequence of characters, you must specify\n> the `String` constructor.\n\n> **Note:** To only ensure an iterable value, use {@link asIterable}.\n\n> **Note:** {@link asArray} is different from\n> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"\n> target=\"_blank\">Array.from</a> or the\n> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\"\n> target=\"_blank\">spread operator</a>, which only convert an iterable to an array.\n> {@link asArray} ensures a value that can be a scalar value or an array of values is converted\n> to an array.",
    "examples": [
      "<caption>ensures argument personOrPersons is converted to an array</caption>\nconst persons = Iterables.asArray(personOrPersons);",
      "<caption>ensures string argument colorOrColors is converted to an array</caption>\nconst persons = Iterables.asArray(colorOrColors, String);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-iterables\">\n   module <code>@jali-ms/util/iterables</code></a>",
      "<a href=\"manual/example.html#jali_util_iterators_asarray\">\n   Example method <code>jali_util_iterators_asarray</code>, examples ① & ②</a>",
      "{@link asIterable}",
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"\n   target=\"_blank\">Array.from (MDN)</a>",
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\"\n   target=\"_blank\">spread syntax (MDN)</a>"
    ],
    "lineNumber": 106,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": true,
        "types": [
          "T ",
          " Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "valueOrSequence",
        "description": "A value that could be a value or an Iterable of that value type."
      },
      {
        "nullable": null,
        "types": [
          "function (...args: any[]): T"
        ],
        "spread": false,
        "optional": true,
        "name": "ctor",
        "description": "Optional constructor for the type being iterated."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<T>"
      ],
      "spread": false,
      "description": "an array of the value type."
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "asIterable",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~asIterable",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{asIterable}",
    "description": "Converts an argument that could either be a value of a type or a sequence of that type to\na sequence of that type.\n\nSpecify the constructor to specify the iteration type. Use for values, such as strings, that are\nalso iterables of another type.\n\n> **Note:** To treat a string as a value rather than a sequence of characters, you must specify\n> the `String` constructor.\n\n> **Note:** To ensure an Array value, use {@link toArray}.",
    "examples": [
      "<caption>ensures argument idOrIds is converted to an iterable</caption>\nconst ids = Iterables.asIterable(idOrIds);"
    ],
    "see": [
      "<a href=\"manual/overview.html#package-jali-util\">\n   package <code>@jali-ms/util</code></a>",
      "<a href=\"manual/overview.html#module-jali-util-iterables\">\n   module <code>@jali-ms/util/iterables</code></a>",
      "<a href=\"manual/example.html#jali_util_iterators_asiterable\">\n   Example method <code>jali_util_iterators_asiterable</code>, examples ① & ②</a>",
      "{@link asArray}"
    ],
    "lineNumber": 168,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `value` type. **Note:** This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": null,
        "types": [
          "T ",
          " Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "valueOrSequence",
        "description": "A value that could be a value or an Iterable of that value type."
      },
      {
        "nullable": null,
        "types": [
          "function (...args: any[]): T"
        ],
        "spread": false,
        "optional": true,
        "name": "ctor",
        "description": "Optional constructor for the type being iterated."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable<T>"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "concat",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~concat",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{concat}",
    "description": "Concatenates a sequence of a type with zero or more other sequences of that type.",
    "see": [
      "<a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat'\n    target=\"_blank\">Array#concat</a>"
    ],
    "lineNumber": 215,
    "since": "0.0.1",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterable<T>} -\n   A sequence of elements"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>[]"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "Array of `Iterable` to concatenate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable<T>"
      ],
      "spread": false,
      "description": "A sequence of elements"
    },
    "generator": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "every",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~every",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{every}",
    "description": "Returns a value indicating whether every element fulfills the specified test.",
    "see": [
      "<a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every'\n    target=\"_blank\">Array#every</a>"
    ],
    "lineNumber": 247,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": false,
        "types": [
          "ElementTest<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": "A function that returns a value indicating whether an element of the sequence fulfills the\n   requirement."
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "filter",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~filter",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{filter}",
    "description": "Returns a subset of the sequence of those elements that pass the specified test.\n\n> **Note:** To return whether a match was found, use {@link includes}. To return the first\n> matching value, use {@link find}.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\n    target=\"_blank\">Array#filter</a>",
      "{@link find}",
      "{@link includes}"
    ],
    "lineNumber": 286,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": false,
        "types": [
          "ElementTest<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": "The filter function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable<T>"
      ],
      "spread": false,
      "description": "A sequence of elements"
    },
    "generator": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "find",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~find",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{find}",
    "description": "Returns the first value matching the specified test or `undefined` if no match was found. If no\ntest is specified, returns the first element, or `undefined` if the sequence is empty.\n\n> **Note:** To return whether a match was found, use {@link some}. To match a specific element\n> value, use {@link includes}. To return all matching values, use {@link filter}.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"\n    target=\"_blank\">Array#find</a>",
      "{@link filter}",
      "{@link includes}",
      "{@link some}"
    ],
    "lineNumber": 324,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": null,
        "types": [
          "ElementTest<T>"
        ],
        "spread": false,
        "optional": true,
        "name": "test",
        "description": "A function that returns a value indicating whether an element of the sequence fulfills the\n   requirement."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T ",
        " undefined"
      ],
      "spread": false,
      "description": "The matched element or `undefined` if no match is found."
    },
    "generator": false
  },
  {
    "__docId__": 124,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "includes",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~includes",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{includes}",
    "description": "Returns a value indicating whether a match for the specified test was found.\n\n> **Note:** To return the first matching value, use {@link find}. To return all matching values\n> use {@link filter}.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"\n    target=\"_blank\">Array#includes</a>",
      "{@link find}",
      "{@link filter}"
    ],
    "lineNumber": 372,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": true,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value search for strictly."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "fromIndex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if the element was found; otherwise, `false`."
    },
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "map",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~map",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{map}",
    "description": "Returns a sequence of elements that are the result of calling the specified converter function on\neach element.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\n    target=\"_blank\">Array#map</a>"
    ],
    "lineNumber": 410,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "U",
        "description": "The result type of the converter function. NOTE: This is a TypeScript type parameter, not a\n   parameter of the function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": false,
        "types": [
          "ElementConverter<T, U>"
        ],
        "spread": false,
        "optional": false,
        "name": "converter",
        "description": "The element conversion function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable<U>"
      ],
      "spread": false,
      "description": "A sequence of converted elements."
    },
    "generator": true
  },
  {
    "__docId__": 126,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "reduce",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~reduce",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{reduce}",
    "description": "Aggregates a sequence to a single computed element value.\n\nIf `initialValue` is specified `accumulator` is called for the first element using the initial\nvalue. Otherwise, it is called against the second element using the first element as the initial\nvalue.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"\n    target=\"_blank\">Array#reduce</a>"
    ],
    "lineNumber": 451,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "U",
        "description": "The accumulator result type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": false,
        "types": [
          "ElementAccumulator<T, U>"
        ],
        "spread": false,
        "optional": false,
        "name": "accumulator",
        "description": "The element aggregation function"
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": true,
        "name": "initialValue",
        "description": "Optional initial value; otherwise, first element is used as initial value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable<U>"
      ],
      "spread": false,
      "description": "A sequence of converted elements"
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "slice",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~slice",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{slice}",
    "description": "Returns a segment of the original sequence.\n\nSkips `begin` elements and takes `end - begin` elements or the rest of the elements if `end` is\nnot specified. If begin is past the last element, no elements are returned. If `begin` or `end`\nis a negative value, the sequence is converted to an array and <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"\ntarget=\"_blank\">Array#slice</a> is called.\n\n> **Note:** To retrieve the first element, use {@link first} or {@link firstOrDefault}.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"\n    target=\"_blank\">Array#slice</a>"
    ],
    "lineNumber": 502,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. NOTE: This is a TypeScript type parameter, not a parameter of the\n   function."
      },
      {
        "nullable": false,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "begin",
        "description": "The first element to include. If negative, converts to an array and uses <a\n   href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"\n   target=\"_blank\">Array#slice</a>"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "end",
        "description": "The first element to include."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": true
  },
  {
    "__docId__": 128,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "some",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~some",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{some}",
    "description": "Returns a value indicating whether any of the elements of a sequence pass the specified test.\n\n> **Note:** To return the first matching value, use {@link find}. To return all matching values,\n> use {@link filter}. To match on equality, use {@link includes}.",
    "see": [
      "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"\n    target=\"_blank\">Array#some</a>",
      "{@link filter}",
      "{@link find}",
      "{@link includes}"
    ],
    "lineNumber": 551,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "T",
        "description": "The `Iterator` element type. <b>NOTE:</b> This is a TypeScript type parameter, not a\n   parameter of the function."
      },
      {
        "nullable": null,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": true,
        "types": [
          "ElementTest<T>"
        ],
        "spread": false,
        "optional": true,
        "name": "test",
        "description": "If not defined, indicates that the function should test for any existing elements; otherwise,\n   a function that indicates whether an element meets a requirement."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if an element was found that meets the test; otherwise, `false`;"
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "toMap",
    "memberof": "all/@jali-ms/util/src/iterables.js",
    "longname": "all/@jali-ms/util/src/iterables.js~toMap",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/iterables.js",
    "importStyle": "{toMap}",
    "description": "Converts a sequence to a {@link Map} using the specified key selector function.",
    "lineNumber": 590,
    "since": "0.0.1",
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "TKey",
        "description": "The key type for the {@link Map}. NOTE: This is a TypeScript type parameter, not a parameter\n   of the function."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "TValue",
        "description": "The `Iterable` element type and the value type for the {@link Map}. NOTE: This is a TypeScript\n   type parameter, not a parameter of the function."
      },
      {
        "nullable": null,
        "types": [
          "Iterable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The `Iterable` to operate on"
      },
      {
        "nullable": null,
        "types": [
          "function(value: TValue): TKey"
        ],
        "spread": false,
        "optional": false,
        "name": "keySelector",
        "description": "The function that retrieves a key for the specified element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map<TKey, TValue>"
      ],
      "spread": false,
      "description": "The new map."
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/src/type-guards.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/src/type-guards.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import * as ArgumentVerifiers from './argument-verifiers';\nimport * as Iterables from './iterables';\nexport function isError(value) {\n    return value.message !== undefined;\n}\nexport function makeIsIterable(elementTypeGuard, deep = false) {\n    ArgumentVerifiers.verifyFunction('elementTypeGuard', elementTypeGuard);\n    const test = (value) => {\n        if (!isIterable(value)) {\n            return false;\n        }\n        if (!deep) {\n            const first = Iterables.find(value);\n            if (first === undefined) {\n                return true;\n            }\n            return elementTypeGuard(first);\n        }\n        for (const element of value) {\n            if (!elementTypeGuard(element)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    // Need type assertion: See https://github.com/Microsoft/TypeScript/issues/5951.\n    return test;\n}\nexport function isIterable(value) {\n    return value && value[Symbol.iterator] !== undefined;\n}\n"
  },
  {
    "__docId__": 131,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isError",
    "memberof": "all/@jali-ms/util/src/type-guards.js",
    "longname": "all/@jali-ms/util/src/type-guards.js~isError",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/type-guards.js",
    "importStyle": "{isError}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "makeIsIterable",
    "memberof": "all/@jali-ms/util/src/type-guards.js",
    "longname": "all/@jali-ms/util/src/type-guards.js~makeIsIterable",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/type-guards.js",
    "importStyle": "{makeIsIterable}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "elementTypeGuard",
        "types": [
          "*"
        ]
      },
      {
        "name": "deep",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isIterable",
    "memberof": "all/@jali-ms/util/src/type-guards.js",
    "longname": "all/@jali-ms/util/src/type-guards.js~isIterable",
    "access": null,
    "export": true,
    "importPath": "jali-srcs/all/@jali-ms/util/src/type-guards.js",
    "importStyle": "{isIterable}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "all/@jali-ms/util/type-guards/index.js",
    "memberof": null,
    "longname": "all/@jali-ms/util/type-guards/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from '../src/type-guards';\n"
  },
  {
    "__docId__": 136,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]